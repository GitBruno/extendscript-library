/*** Photoshop_library class* @class <b>Photoshop_library</b> a class of photoshop function </br>* these functions can be used with the class Picture tools and the method call_photoshop* @author Bastien Eichenberger**/function Photoshop_library(){}/*** function to open an image an save it in Tif file format* @param {Object} obj a JSON object {file_path : path encoded with encodeURI}* @return {String} new_file_path the new file path**/Photoshop_library.save_to_TIFF_PS = function(){    function save_to_tiff(serializedObject){        app.displayDialogs = DialogModes.NO;        var obj = eval(serializedObject);        var file_path = decodeURI(obj.file_path);        var lastDot = file_path.lastIndexOf( "." );        var file_path_without_ext = file_path.substr( 0, lastDot );        var new_file_path = file_path_without_ext + ".tif";        var img_file = new File(file_path);        var ps_doc = app.open(img_file);        tiffSaveOption = new TiffSaveOptions();        tiffSaveOption.embedColorProfile = true;        app.activeDocument.saveAs(new File(new_file_path), tiffSaveOption, true, Extension.LOWERCASE);        ps_doc.close();        app.displayDialogs = DialogModes.ALL;        return new_file_path;    }    return save_to_tiff;}/*** function to open an image an save it in PSD file format* @param {Object} obj a JSON object {file_path : path encoded with encodeURI}* @return {String} new_file_path the new file path**/Photoshop_library.save_to_PSD_PS = function(){    function save_to_psd (serializedObject){        app.displayDialogs = DialogModes.NO;        var obj = eval(serializedObject);        var file_path = decodeURI(obj.file_path);        var lastDot = file_path.lastIndexOf( "." );        var file_path_without_ext = file_path.substr( 0, lastDot );        var new_file_path = file_path_without_ext + ".psd";            var img_file = new File(file_path);        var ps_doc = app.open(img_file);        psdSaveOption = new PhotoshopSaveOptions();        psdSaveOption.embedColorProfile = true;        app.activeDocument.saveAs(new File(new_file_path), psdSaveOption, true, Extension.LOWERCASE);        ps_doc.close();        app.displayDialogs = DialogModes.ALL;        return new_file_path;    }    return save_to_psd;}/*** function resize an image in photoshop* @param {Object} obj a JSON object {                file_path : encodeURI(file_path),                horizontal_scale : horizontal_scale,                vertical_scale : vertical_scale,                resolution : target_resolution,                resample_method : resample_method            }**/Photoshop_library.resampling_PS = function(){    function resampling(serializedObject){        app.displayDialogs = DialogModes.NO;        app.preferences.rulerUnits = Units.MM;                var obj = eval(serializedObject);        var file_path = decodeURI(obj.file_path);        var horizontal_scale = obj.horizontal_scale;        var vertical_scale = obj.vertical_scale;        var resolution = obj.resolution;        var resample_method = eval(obj.resample_method);        var img_file = new File(file_path);        var ps_doc = app.open(img_file);        var is_prop = obj.is_prop;                var doc_width = ps_doc.width * (horizontal_scale/100);        var doc_height = ps_doc.height * (vertical_scale/100);        ps_doc.resizeImage(doc_width, doc_height, resolution, resample_method);        ps_doc.save();        ps_doc.close();        app.displayDialogs = DialogModes.ALL;    }    return resampling;}/*** function to open an image an return its resolution* @param {Object} obj a JSON object {file_path : path encoded with encodeURI}* @return {String} resolution the resolution in PPI**/Photoshop_library.get_resolution_PS = function(){    function get_resolution(serializedObject){        app.displayDialogs = DialogModes.NO;        app.preferences.rulerUnits = Units.MM;                var obj = eval(serializedObject);        var file_path = decodeURI(obj.file_path);        var img_file = new File(file_path);        var ps_doc = app.open(img_file);                var resolution = ps_doc.resolution;        ps_doc.close();        app.displayDialogs = DialogModes.ALL;        return resolution;    }    return get_resolution;}