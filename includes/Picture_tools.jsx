#include "Tools.jsx"#include "PS/Photoshop_library.jsx"#include "Document_tools.jsx"/*** Pictures_tools class* @class <b>Picture_tools</b> a class to deal with images. Contains static methods* @author Bastien Eichenberger* @requires Tools class* @requires Photoshop_library* @requires Document_tools**/function Picture_tools(){    }/** * function to check if a link contains an bitmap image * @param{ Link} link_item  * @return {Boolean} true if the link is a bitmap image **/Picture_tools.is_image_bitmap = function(link_item){    var is_bitmap = false;    var image = link_item.parent;    var black_and_white_key = app.translateKeyString("$ID/#Links_Black and White");    if (image.constructor.name == "Image") {        if(image.space == black_and_white_key){            is_bitmap = true;        }    }    return is_bitmap}/*** function to check if a eps file is a raster file* @param {File} file a file object* @return {Boolean} true if the file is a raster eps file has been created with Photoshop, false if it is a vector eps file**/Picture_tools.is_raster_eps = function(file){   var eps_file = file;   eps_file.open('r');   var str =eps_file.read();   eps_file.close();   var res = str.match('Adobe Photoshop');   if(res != null){        res = true;   }   else{        res = false;   }   return (res);}/*** function to check if an image contains alpha channel, this function run an AppleScript to call the shell (sips -g hasAlpha function)* @param {Link} link_item* @return {Boolean} true if the image contains an alpha channel* @throws {Error} if the system is windows, the function works only on mac os x**/Picture_tools.has_item_alpha_channel = function(link_item){    throw new Error("this function doesnt work correcty");    if(File.fs == "Windows"){        throw new Error("the function has_alpha_channel works only on mac os x");    }    var file_path = Document_tools.get_file_path_from_link(link_item);    var appleScript = "set result to do shell script \"sips -g hasAlpha '"+  file_path +"'\"";    $.writeln(appleScript);    var result = app.doScript(appleScript, ScriptLanguage.applescriptLanguage);    var res = result.match("hasAlpha: yes");    if(res != null){        res = true;    }    else{        res = false;    }    return res;}/*** function to execute a function in photoshop* @param {function} photoshop_function a photoshop function* @param {JSON Object} obj a JSON Object { proprety : value}* @return the value of the photoshop function, if the function is void -> null* @throws {Error} if the photoshop function throw an exception**/Picture_tools.call_potoshop = function(photoshop_function, obj){    var error = null;    var result = null;    var bt = new BridgeTalk();     bt.target = "photoshop";     bt.body = photoshop_function.toSource()+"("+obj.toSource()+");";     bt.onError = function(ex){        error = ex.body     }     bt.onResult = function(obj){        result = obj.body;     }     bt.send(100);     if(error != null){        throw new Error(error);     }    return result;}