/** * @class File *//** * Function to check if an eps file is a raster file * @return {Boolean} true if the file is a raster eps file created with Photoshop, false if it is a vector eps file */File.prototype.is_raster_eps = function () {    this.open('r');    var str = this.read();    this.close();    var result = str.match('Adobe Photoshop');    if (result) {        return true;    }    else {        return false;    }}/** * Function to read the content of a File * @return {string} */File.prototype.read = function () {    var str = '';    this.encoding = 'UTF8';    this.open('r');    while (!this.eof) {        str += this.readln() + '\n';    }    this.close();    return str;}/** * Function to write into a file * @param {*} content */File.prototype.write = function (content) {    this.encoding = 'UTF8';    var rc = this.open('w', 'TEXT', '????');    if (!rc) {        throw {            name: 'Error',            message: 'the file cannot be read',            fileName: $.fileName,            line: $.line        };    }    this.lineFeed = 'unix';    rc = this.writeln(content);    rc = this.close();};/** * Function to get the extension of a file in lowerCase * @return {String} extension the file extension or undefined if the file do no have an extension */File.prototype.extension = function () {    var path = this.fsName;    var extension;    var index = path.lastIndexOf(".");    if (index !== -1) {        extension = path.substr(index, path.length - index).toLowerCase();    }    return extension;}