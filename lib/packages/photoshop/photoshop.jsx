/** * @name Lib.Photoshop * @class <b>Lib.Photoshop</b> a module with Photoshop functions </br> * These functions can be used from InDesign with the Lib.Utils.Gateway module * @author Bastien Eichenberger **/Lib.Photoshop = (function (my) {    /**     * Function to open a file with Photoshop     * @name Lib.Photoshop#open_image     * @function     * @param {{file_path: string}} obj a JSON object     */    my.open_image = function (obj) {        app.displayDialogs = DialogModes.NO;        var file_path = decodeURI(obj.file_path);        var img_file = new File(file_path);        var ps_doc = app.open(img_file);        app.displayDialogs = DialogModes.ALL;    }    /**     * Function to save the active document as PSD     * @name Lib.Photoshop#save_to_PSD     * @function     * @param {{file_path: string}} obj a JSON object     */    my.save_to_PSD = function (obj) {        app.displayDialogs = DialogModes.NO;        var file_path = decodeURI(obj.file_path);        psdSaveOption = new PhotoshopSaveOptions();        psdSaveOption.embedColorProfile = true;        app.activeDocument.saveAs(new File(file_path), psdSaveOption, true, Extension.LOWERCASE);        app.activeDocument.close();        app.displayDialogs = DialogModes.ALL;    }    /**     * Function to save the active document TIFF     * @name Lib.Photoshop#save_to_TIFF     * @function     * @param {{file_path: string}} obj a JSON object     */    my.save_to_TIFF = function (obj) {        app.displayDialogs = DialogModes.NO;        var file_path = decodeURI(obj.file_path);        tiffSaveOption = new TiffSaveOptions();        tiffSaveOption.embedColorProfile = true;        app.activeDocument.saveAs(new File(file_path), tiffSaveOption, true, Extension.LOWERCASE);        app.activeDocument.close();        app.displayDialogs = DialogModes.ALL;    }    /**     * Function to resize an image in photoshop     * @name Lib.Photoshop#resampling     * @function     * @param     * {{     *      file_path : string,     *      horizontal_scale : number,     *      vertical_scale : number,     *      resolution : number,     *      resample_method : ResampleMethod     *  }} obj a JSON object     */    my.resampling = function (obj) {        app.displayDialogs = DialogModes.NO;        app.preferences.rulerUnits = Units.MM;        var file_path = decodeURI(obj.file_path);        var horizontal_scale = obj.horizontal_scale;        var vertical_scale = obj.vertical_scale;        var resolution = obj.resolution;        var resample_method = obj.resample_method;        var doc_width = ps_doc.width * (horizontal_scale / 100);        var doc_height = ps_doc.height * (vertical_scale / 100);        app.activeDocument.resizeImage(doc_width, doc_height, resolution, resample_method);        app.activeDocument.save();        app.activeDocument.close();        app.displayDialogs = DialogModes.ALL;    }    /**     * Function to get the resolution of the active Photoshop document     * @name Lib.Photoshop#get_resolution     * @function     * @returns {Number} the resolution of the document     */    my.get_resolution = function () {        app.displayDialogs = DialogModes.NO;        app.preferences.rulerUnits = Units.MM;        var resolution = app.activeDocument.resolution;        app.activeDocument.close();        app.displayDialogs = DialogModes.ALL;        return resolution;    }    return my;})(Lib || {});