/** * function who package a document and his link * @param {Indesign Document} doc the doc to package * @param {String} directories_path_str the path where to store the new document * @return {String} new_doc_file the new doc path * @throw {Error} if the package function occured an error **/Document_tools.save_with_package = function(doc, directories_path_str) {    var result_package = false;	var current_date = new Date();	var folder_package = Folder (directories_path_str);	if (folder_package.exists == false) {        folder_package.create();    }	var doc_file = doc.fullName;	var current_folder = Folder (folder_package + "/" + Tools.format_date(current_date) + "_" + Tools.format_time(current_date) + "__" + doc.name);	current_folder.create();    /**bool packageForPrint (to: File, copyingFonts: bool, copyingLinkedGraphics: bool, copyingProfiles: bool, updatingGraphics: bool,       *  includingHiddenLayers: bool, ignorePreflightErrors: bool, creatingReport: bool[, versionComments: string][, forceSave: bool=false])      **/    result_package = doc.packageForPrint(current_folder, false, true, false, true, false, true, false);    if(!result_package){        throw new Error("il y a eu un problème lors de l'assemblage");    }    return current_folder + "/" + doc.name;}/** * function to get the filepath from a link item * @param {Link} link_item the link item * @return {String} my_path the filepath of the element in the link item **/Document_tools.get_file_path_from_link = function(link_item){    var file_object = new File(link_item.filePath);    var my_path = file_object.fsName;    return my_path;}